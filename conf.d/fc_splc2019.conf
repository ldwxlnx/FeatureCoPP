global {
	logdirectory = "${HOME}/Downloads/fc_projects";
	logrotate = 0;
	//debug = 1;
	//mode = areport;
	mode = report;
	macropattern = "(USE|HAVE)_\w+";
	logprefix = "${PROG}_splc2019";
	/***********
	 * PROJECTS
	 ***********/
	apache {
		input = "${HOME}/Downloads/fc_projects/apache-2.4.9";
	};
	cpython {
		input = "${HOME}/Downloads/fc_projects/cpython-3.7.1rc1";
	};	
	emacs {
		input = "${HOME}/Downloads/fc_projects/emacs-26.1";
		blacklist {
			// Ignore autotools input, due to restricted identifier recognition (cf. line 17ff -> _@GUARD_PREFIX@_DIRENT_H)
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/dirent.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/errno.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/fcntl.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/getopt-cdefs.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/getopt.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/inttypes.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/limits.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/signal.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/stddef.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/stdint.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/stdio.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/stdlib.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/string.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/sys_select.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/sys_stat.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/sys_time.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/sys_types.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/time.in.h";
			"${HOME}/Downloads/fc_projects/emacs-26.1/lib/unistd.in.h";
		};
	};	
	gimp {
		input = "${HOME}/Downloads/fc_projects/gimp-2.9.8";
	};
	git {
		input = "${HOME}/Downloads/fc_projects/git-2.19.0";
	};
	glibc {
		input = "${HOME}/Downloads/fc_projects/glibc-2.9";
	};
	imagemagick {
		input = "${HOME}/Downloads/fc_projects/ImageMagick-7.0.8-12";
	};
	libxml2 {
		input = "${HOME}/Downloads/fc_projects/libxml2-2.7.2";
	};
	lighttpd {
		input = "${HOME}/Downloads/fc_projects/lighttpd1.4.50";
	};
	
	linux {
		input = "${HOME}/Downloads/fc_projects/linux-4.10.4";
		macropattern = "CONFIG_\w+";
		blacklist {
			// cpp'ed pure assembler -> lexical/syntax ambiguities due to assembler comments
			"${HOME}/Downloads/fc_projects/linux-4.10.4/arch/arc/include/asm/entry-arcv2.h";
			"${HOME}/Downloads/fc_projects/linux-4.10.4/arch/arc/include/asm/tlb-mmu1.h";
		};
	};
	mysql {
		input = "${HOME}/Downloads/fc_projects/mysql-server-8.0.12";
	};
	openldap {
		input = "${HOME}/Downloads/fc_projects/openldap-2.4.46";
	};
	php {
		input = "${HOME}/Downloads/fc_projects/php-src-7.3.0rc2";
		blacklist {
			// Line 3: Syntax error:  in line 1, column 13 for expression: #ifndef PHP_%EXTNAMECAPS%_H (% interpreted as modulus, hence syntax error)
			"${HOME}/Downloads/fc_projects/php-src-7.3.0rc2/ext/skeleton/php_skeleton.h";
			// Line 44: Syntax error:  in line 1, column 40 for expression: #if defined(ZTS) && defined(COMPILE_DL_%EXTNAMECAPS%) (see above)
			"${HOME}/Downloads/fc_projects/php-src-7.3.0rc2/ext/skeleton/skeleton.c";
			// Syntax error:  in line 1, column 9 for expression:
			// # ifdef (__sparc__ || __sparc) (non standard usage of directives)
			"${HOME}/Downloads/fc_projects/php-src-7.3.0rc2/sapi/fpm/fpm/fpm_env.c";
		};
	};
	postgresql {
		input = "${HOME}/Downloads/fc_projects/postgresql-10.1";
	};
	sendmail {
		input = "${HOME}/Downloads/fc_projects/sendmail-8.12.11";
	};
	subversion {
		input = "${HOME}/Downloads/fc_projects/subversion-1.10.2";
	};
	sylpheed {
		input = "${HOME}/Downloads/fc_projects/sylpheed-3.6.0";
	};
	vim {
		input = "${HOME}/Downloads/fc_projects/vim-8.1";
		macropattern = "(FEAT|USE|HAVE)_\w+";
	};
	xfig {
		input = "${HOME}/Downloads/fc_projects/xfig-full-3.2.7a/xfig-3.2.7a";
	};
};